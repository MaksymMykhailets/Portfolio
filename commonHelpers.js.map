{"version":3,"file":"commonHelpers.js","sources":["../src/js/api.js","../src/js/projects.js","../src/js/covers.js","../src/js/reviews.js"],"sourcesContent":["// export const api;\n\nimport axios from 'axios';\n\nconst baseUrlReviews = \"https://portfolio-js.b.goit.study/api/reviews\";\n\n export async function getApi() {\n    const { data } = await axios.get(`${baseUrlReviews}`, {\n    headers: {\n        Accept: \"application/json\"\n    },\n    method: \"Get\"\n    })\n    return data;\n\n}\n\n","import Swiper from 'swiper';\nimport 'swiper/css';\nimport 'swiper/css/keyboard';\nimport 'swiper/css/mousewheel';\nimport 'swiper/css/navigation';\n\nconst swiperEl = document.querySelector('.swiper-container')\n\nconst swiper = new Swiper(swiperEl, {\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  // on: {\n  //   slideChange: function () {\n  //     if (swiper.isEnd) {\n  //       swiper.navigation.next.disable();\n  //     } else {\n  //       swiper.navigation.next.enable();\n  //     }\n\n  //     if (swiper.isBeginning) {\n  //       swiper.navigation.prev.disable();\n  //     } else {\n  //       swiper.navigation.prev.enable();\n  //     }\n  //   },\n  // },\n});\n\n  console.log(swiper);\n\n","function animateElementsOnScroll() {\n  const coverBlock = document.querySelector('.content');  \n  const images = document.querySelectorAll('.marquee__line');  \n\n  function handleEntry(entry) {\n    entry.forEach(change => {\n      if (change.isIntersecting) {\n        images.forEach(image => image.classList.add('animate-covers'));  \n      } else {\n        images.forEach(image => image.classList.remove('animate-covers')); \n      }\n    });\n  }\n\n  let options = {\n    threshold: [0.5],  \n  };\n\n  let observer = new IntersectionObserver(handleEntry, options);  \n\n  observer.observe(coverBlock); \n}\n\n \nanimateElementsOnScroll();","import Swiper from 'swiper';\nimport 'swiper/css';\nimport {getApi} from './api';\n\nconst list = document.querySelector(\".reviews_swiper_wrapper\");\n\nasync function addCardsOnPage() {\n    try {\n     const data = await getApi();\n     list.insertAdjacentHTML(\"beforeend\", createMarkup(data));\n    }\n    catch (error) {\n        console.log(error.message);\n        \n    }\n    \n}\n \nfunction createMarkup(arr) {\n    return arr.map(({ id, author, avatar_url, review }) => `\n    <div class=\"reviews_swiper_slide\">\n    <li class=\"card\" data-id =\"${id}\">\n    <img class=\"card_img\" src=\"${avatar_url}\" alt=\"photo\">\n    <h3 class=\"card_title\">${author}</h3>\n    <p class=\"card_text\">${review}</p> \n    </li>\n    </div>\n    `)\n        .join(\"\") \n}\n\naddCardsOnPage()\n\n"],"names":["baseUrlReviews","getApi","data","axios","swiperEl","swiper","Swiper","animateElementsOnScroll","coverBlock","images","handleEntry","entry","change","image","options","list","addCardsOnPage","createMarkup","error","arr","id","author","avatar_url","review"],"mappings":"wvBAIA,MAAMA,EAAiB,gDAEf,eAAeC,GAAS,CAC5B,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMC,EAAM,IAAI,GAAGH,CAAc,GAAI,CACtD,QAAS,CACL,OAAQ,kBACX,EACD,OAAQ,KACZ,CAAK,EACD,OAAOE,CAEX,CCTA,MAAME,EAAW,SAAS,cAAc,mBAAmB,EAErDC,EAAS,IAAIC,EAAOF,EAAU,CAClC,WAAY,CACV,OAAQ,sBACR,OAAQ,qBACT,CAgBH,CAAC,EAEC,QAAQ,IAAIC,CAAM,EC9BpB,SAASE,GAA0B,CACjC,MAAMC,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAS,SAAS,iBAAiB,gBAAgB,EAEzD,SAASC,EAAYC,EAAO,CAC1BA,EAAM,QAAQC,GAAU,CAClBA,EAAO,eACTH,EAAO,QAAQI,GAASA,EAAM,UAAU,IAAI,gBAAgB,CAAC,EAE7DJ,EAAO,QAAQI,GAASA,EAAM,UAAU,OAAO,gBAAgB,CAAC,CAExE,CAAK,CACF,CAED,IAAIC,EAAU,CACZ,UAAW,CAAC,EAAG,CACnB,EAEiB,IAAI,qBAAqBJ,EAAaI,CAAO,EAEnD,QAAQN,CAAU,CAC7B,CAGAD,EAAyB,ECpBzB,MAAMQ,EAAO,SAAS,cAAc,yBAAyB,EAE7D,eAAeC,GAAiB,CAC5B,GAAI,CACH,MAAMd,EAAO,MAAMD,IACnBc,EAAK,mBAAmB,YAAaE,EAAaf,CAAI,CAAC,CACvD,OACMgB,EAAO,CACV,QAAQ,IAAIA,EAAM,OAAO,CAE5B,CAEL,CAEA,SAASD,EAAaE,EAAK,CACvB,OAAOA,EAAI,IAAI,CAAC,CAAE,GAAAC,EAAI,OAAAC,EAAQ,WAAAC,EAAY,OAAAC,CAAM,IAAO;AAAA;AAAA,iCAE1BH,CAAE;AAAA,iCACFE,CAAU;AAAA,6BACdD,CAAM;AAAA,2BACRE,CAAM;AAAA;AAAA;AAAA,KAG5B,EACI,KAAK,EAAE,CAChB,CAEAP,EAAc"}